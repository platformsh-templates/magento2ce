<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminSimpleProductRemoveImagesTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Add/remove images and videos for all product types and category"/>
            <title value="Admin should be able to remove Product Images assigned as Base, Small and Thumbnail from Simple Product"/>
            <description value="Admin should be able to remove Product Images assigned as Base, Small and Thumbnail from Simple Product"/>
            <severity value="BLOCKER"/>
            <testCaseId value="MC-191"/>
            <group value="Catalog"/>
        </annotations>

        <before>
            <createData entity="_defaultCategory" stepKey="category"/>
            <createData entity="_defaultProduct" stepKey="product">
                <requiredEntity createDataKey="category"/>
            </createData>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>

        <after>
            <deleteData createDataKey="category" stepKey="deletePreReqCategory"/>
            <deleteData createDataKey="product" stepKey="deleteProduct"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>
        </after>

        <!-- Go to the product edit page -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="goToProductIndex"/>
        <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="resetProductGrid"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterProductGridBySku">
            <argument name="product" value="$$product$$"/>
        </actionGroup>
        <actionGroup ref="OpenProductForEditByClickingRowXColumnYInProductGridActionGroup" stepKey="openProduct"/>

        <!-- Set url key -->
        <click selector="{{AdminProductSEOSection.sectionHeader}}" stepKey="openSeoSection"/>
        <fillField selector="{{AdminProductSEOSection.urlKeyInput}}" userInput="$$product.name$$" stepKey="fillUrlKey"/>

        <!-- Expand images section -->
        <click selector="{{AdminProductImagesSection.productImagesToggle}}" stepKey="expandImages"/>

        <!-- Upload and set Base image -->
        <attachFile selector="{{AdminProductImagesSection.imageFileUpload}}" userInput="adobe-base.jpg" stepKey="attach1"/>
        <waitForPageLoad stepKey="waitForUpload1"/>
        <click selector="{{AdminProductImagesSection.nthProductImage('1')}}" stepKey="openImageDetails1"/>
        <waitForPageLoad stepKey="waitForSlideout1"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleBase}}" dependentSelector="{{AdminProductImagesSection.isBaseSelected}}" visible="false" stepKey="base1"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleSmall}}" dependentSelector="{{AdminProductImagesSection.isSmallSelected}}" visible="true" stepKey="small1"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleThumbnail}}" dependentSelector="{{AdminProductImagesSection.isThumbnailSelected}}" visible="true" stepKey="thumbnail1"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleSwatch}}" dependentSelector="{{AdminProductImagesSection.isSwatchSelected}}" visible="true" stepKey="swatch1"/>
        <pressKey selector="{{AdminProductImagesSection.altText}}" parameterArray="[\Facebook\WebDriver\WebDriverKeys::ESCAPE]" stepKey="pressEsc1"/>
        <waitForPageLoad stepKey="waitForHide1"/>

        <!-- Upload and set Small image -->
        <attachFile selector="{{AdminProductImagesSection.imageFileUpload}}" userInput="adobe-small.jpg" stepKey="attach2"/>
        <waitForPageLoad stepKey="waitForUpload2"/>
        <click selector="{{AdminProductImagesSection.nthProductImage('2')}}" stepKey="openImageDetails2"/>
        <waitForPageLoad stepKey="waitForSlideout2"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleBase}}" dependentSelector="{{AdminProductImagesSection.isBaseSelected}}" visible="true" stepKey="base2"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleSmall}}" dependentSelector="{{AdminProductImagesSection.isSmallSelected}}" visible="false" stepKey="small2"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleThumbnail}}" dependentSelector="{{AdminProductImagesSection.isThumbnailSelected}}" visible="true" stepKey="thumbnail2"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleSwatch}}" dependentSelector="{{AdminProductImagesSection.isSwatchSelected}}" visible="true" stepKey="swatch2"/>
        <pressKey selector="{{AdminProductImagesSection.altText}}" parameterArray="[\Facebook\WebDriver\WebDriverKeys::ESCAPE]" stepKey="pressEsc2"/>
        <waitForPageLoad stepKey="waitForHide2"/>

        <!-- Upload and set Thumbnail image -->
        <attachFile selector="{{AdminProductImagesSection.imageFileUpload}}" userInput="adobe-thumb.jpg" stepKey="attach3"/>
        <waitForPageLoad stepKey="waitForUpload3"/>
        <click selector="{{AdminProductImagesSection.nthProductImage('3')}}" stepKey="openImageDetails3"/>
        <waitForPageLoad stepKey="waitForSlideout3"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleBase}}" dependentSelector="{{AdminProductImagesSection.isBaseSelected}}" visible="true" stepKey="base3"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleSmall}}" dependentSelector="{{AdminProductImagesSection.isSmallSelected}}" visible="true" stepKey="small3"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleThumbnail}}" dependentSelector="{{AdminProductImagesSection.isThumbnailSelected}}" visible="false" stepKey="thumbnail3"/>
        <conditionalClick selector="{{AdminProductImagesSection.roleSwatch}}" dependentSelector="{{AdminProductImagesSection.isSwatchSelected}}" visible="true" stepKey="swatch3"/>
        <pressKey selector="{{AdminProductImagesSection.altText}}" parameterArray="[\Facebook\WebDriver\WebDriverKeys::ESCAPE]" stepKey="pressEsc3"/>
        <waitForPageLoad stepKey="waitForHide3"/>

        <!-- Save the product with all 3 images -->
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="saveProduct"/>

        <!-- Go to the product page and see the Base image -->
        <amOnPage url="$$product.name$$.html" stepKey="goToProductPage"/>
        <waitForPageLoad stepKey="wait4"/>
        <seeElement selector="{{StorefrontProductMediaSection.imageFile('/adobe-base')}}" stepKey="seeBase"/>

        <!-- Go to the category page and see the Small image -->
        <amOnPage url="$$category.name$$.html" stepKey="goToCategoryPage"/>
        <waitForPageLoad stepKey="wait3"/>
        <seeElement selector="{{StorefrontCategoryProductSection.ProductImageBySrc('/adobe-small')}}" stepKey="seeThumb"/>

        <!-- Go to the admin grid and see the Thumbnail image -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="goToProductIndex2"/>
        <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="resetProductGrid2"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterProductGridBySku2">
            <argument name="product" value="$$product$$"/>
        </actionGroup>
        <seeElement selector="{{AdminProductGridSection.productThumbnailBySrc('/adobe-thumb')}}" stepKey="seeBaseInGrid"/>

        <!-- Go to the product edit page again -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="goToProductIndex3"/>
        <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="resetProductGrid3"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterProductGridBySku3">
            <argument name="product" value="$$product$$"/>
        </actionGroup>
        <actionGroup ref="OpenProductForEditByClickingRowXColumnYInProductGridActionGroup" stepKey="openProduct3"/>
        <click selector="{{AdminProductImagesSection.productImagesToggle}}" stepKey="expandImages2"/>

        <!-- Remove all images -->
        <click selector="{{AdminProductImagesSection.nthRemoveImageBtn('1')}}" stepKey="removeImage1"/>
        <click selector="{{AdminProductImagesSection.nthRemoveImageBtn('2')}}" stepKey="removeImage2"/>
        <click selector="{{AdminProductImagesSection.nthRemoveImageBtn('3')}}" stepKey="removeImage3"/>
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="saveProduct2"/>

        <!-- Check admin grid for placeholder -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="goToProductIndex4"/>
        <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="resetProductGrid4"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterProductGridBySku4">
            <argument name="product" value="$$product$$"/>
        </actionGroup>
        <dontSeeElement selector="{{AdminProductGridSection.productThumbnailBySrc('/adobe-thumb')}}" stepKey="dontSeeBaseInGrid"/>
        <seeElement selector="{{AdminProductGridSection.productThumbnailBySrc('/placeholder/thumbnail')}}" stepKey="seePlaceholderThumb"/>

        <!-- Check category page for placeholder -->
        <amOnPage url="$$category.name$$.html" stepKey="goToCategoryPage2"/>
        <waitForPageLoad stepKey="wait7"/>
        <dontSeeElement selector="{{StorefrontCategoryProductSection.ProductImageBySrc('/adobe-small')}}" stepKey="dontSeeThumb"/>
        <seeElement selector="{{StorefrontCategoryProductSection.ProductImageBySrc('placeholder/small_image')}}" stepKey="seePlaceholderSmall"/>

        <!-- Check product page for placeholder -->
        <amOnPage url="$$product.name$$.html" stepKey="goToProductPage2"/>
        <waitForPageLoad stepKey="wait8"/>
        <dontSeeElement selector="{{StorefrontProductMediaSection.imageFile('/adobe-base')}}" stepKey="dontSeeBase"/>
        <seeElement selector="{{StorefrontProductMediaSection.imageFile('placeholder/image')}}" stepKey="seePlaceholderBase"/>
    </test>
</tests>
