<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminEditRelatedBundleProductTest">
        <annotations>
            <features value="Bundle"/>
            <stories value="Create/Edit bundle product in Admin"/>
            <title value="Admin should be able to set/edit Related Products information when editing a bundle product"/>
            <description value="Admin should be able to set/edit Related Products information when editing a bundle product"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-3342"/>
            <group value="Bundle"/>
        </annotations>
        <before>
            <!--Admin login-->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct0"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct1"/>
            <magentoCron stepKey="runCronIndex" groups="index"/>
        </before>
        <after>
            <!-- Delete the bundled product -->
            <actionGroup stepKey="deleteBundle" ref="DeleteProductUsingProductGridActionGroup">
                <argument name="product" value="BundleProduct"/>
            </actionGroup>
            <!--Logging out-->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="amOnLogoutPage"/>
            <deleteData createDataKey="simpleProduct0" stepKey="deleteSimpleProduct0"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
        </after>

        <!-- Create a bundle product -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="visitAdminProductPageBundle"/>
        <actionGroup ref="GoToCreateProductPageActionGroup" stepKey="goToCreateBundleProduct">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>

        <actionGroup ref="FillProductNameAndSkuInProductFormActionGroup" stepKey="fillBundleProductNameAndSku">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>

        <actionGroup ref="AddRelatedProductBySkuActionGroup" stepKey="addRelatedProduct0">
            <argument name="sku" value="$$simpleProduct0.sku$$"/>
        </actionGroup>

        <!--Save the product-->
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="clickSaveButton"/>
        <see selector="{{AdminCategoryMessagesSection.SuccessMessage}}" userInput="You saved the product." stepKey="messageYouSavedTheProductIsShown"/>

        <actionGroup ref="AddRelatedProductBySkuActionGroup" stepKey="addRelatedProduct1">
            <argument name="sku" value="$$simpleProduct1.sku$$"/>
        </actionGroup>

        <!--Remove previous related product-->
        <click selector="{{AdminProductFormRelatedUpSellCrossSellSection.removeRelatedProduct($$simpleProduct0.sku$$)}}" stepKey="removeRelatedProduct"/>

        <!--Save the product-->
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="clickSaveButtonAfterEdit"/>
        <see selector="{{AdminCategoryMessagesSection.SuccessMessage}}" userInput="You saved the product." stepKey="messageYouSavedTheProductIsShownAgain"/>

        <!--See related product in admin-->
        <scrollTo selector="{{AdminProductFormRelatedUpSellCrossSellSection.relatedDropdown}}" stepKey="scrollTo"/>
        <conditionalClick selector="{{AdminProductFormRelatedUpSellCrossSellSection.relatedDropdown}}" dependentSelector="{{AdminProductFormRelatedUpSellCrossSellSection.relatedDependent}}" visible="false" stepKey="openDropDownIfClosedRelatedSee"/>
        <see selector="{{AdminProductFormRelatedUpSellCrossSellSection.selectedRelatedProduct}}" userInput="$$simpleProduct1.sku$$" stepKey="seeRelatedProduct"/>

        <magentoCLI command="cron:run --group=index" stepKey="runCronIndexer"/>

        <!--See related product in storefront-->
        <amOnPage url="{{BundleProduct.sku}}.html" stepKey="goToStorefront"/>
        <waitForPageLoad stepKey="waitForStorefront"/>
        <see userInput="$$simpleProduct1.sku$$" stepKey="seeRelatedProductInStorefront"/>
    </test>
</tests>
